create_pkg_report(pkgname = "hkdatasets")
devtools::load_all()
create_pkg_report(pkgname = "hkdatasets")
devtools::load_all()
create_pkg_report(pkgname = "hkdatasets")
devtools::load_all()
create_pkg_report(pkgname = "hkdatasets")
create_pkg_report(pkgname = "rwa")
x <- "tidyverse"
library(x)
library(evaluate(x))
eval(x)
library(eval(x))
?do.call()
?library
do.call(library, args = list("package" = x))
devtools::load_all()
create_pkg_report(pkgname = "rwa")
create_pkg_report(pkgname = "wpa")
Sys.Date
Sys.Date()
lubridate::floor_date(Sys.Date(), unit = "month")
?lubridate::floor_date
lubridate::floor_date(x = Sys.Date(), unit = "month")
lubridate::ceiling_date(x = Sys.Date(), unit = "month")
lubridate::ceiling_date(x = Sys.Date(), unit = "month") - 1
roxygen2::roxygenise()
library(wpa)
devtools::load_all()
create_pkg_report(pkgname = "wpa", from = "2021-07-01")
devtools::load_all()
create_pkg_report(pkgname = "wpa", from = "2021-07-01")
devtools::load_all()
create_pkg_report(pkgname = "wpa", from = "2021-07-01", to = "2021-07-31")
devtools::load_all()
create_pkg_report(pkgname = "wpa", from = "2021-07-01", to = "2021-07-31")
?tools::package_dependencies
roxygen2::roxygenise()
devtools::load_al()
devtools::load_all()
create_pkg_report(pkgname = "wpa", from = "2021-07-01", to = "2021-07-31")
devtools::load_all()
create_pkg_report(pkgname = "wpa", from = "2021-07-01", to = "2021-07-31")
devtools::load_all()
create_pkg_report(pkgname = "wpa", from = "2021-07-01", to = "2021-07-31")
devtools::load_all()
create_pkg_report(pkgname = "wpa", from = "2021-07-01", to = "2021-07-31")
?loadNamespace
?valueBox
devtools::load_all()
create_pkg_report(pkgname = "wpa", from = "2021-07-01", to = "2021-07-31")
devtools::load_all()
create_pkg_report(pkgname = "wpa", from = "2021-07-01", to = "2021-07-31")
as.Date("2021-07-31", "%Y-%m-%d")
as.Date("2021-07-31", "%Y-%m-%d") - as.Date"(2021-07-01", "%Y-%m-%d")
as.Date("2021-07-31", "%Y-%m-%d") - as.Date("2021-07-01", "%Y-%m-%d")
devtools::load_all()
create_pkg_report(pkgname = "wpa", from = "2021-07-01", to = "2021-07-31")
devtools::load_all()
create_pkg_report(pkgname = "wpa", from = "2021-07-01", to = "2021-07-31")
devtools::load_all()
create_pkg_report(pkgname = "wpa", from = "2021-07-01", to = "2021-07-31")
roxygen2::roxygenise()
devtools::load_all()
get_gh_pr(owner = "martinctc", repo = "rwa")
devtools::load_all()
get_gh_pr(owner = "martinctc", repo = "rwa")
roxygen2::roxygenise()
?grep
gsub(pattern = "/.+", replacement = "", x = "martinctc/rwa")
gsub(pattern = ".+/", replacement = "", x = "martinctc/rwa")
roxygen2::roxygenise()
devtools::load_all()
create_pkg_report(pkgname = "wpa", gh = "microsoft/wpa")
roxygen2::roxygenise()
devtools::load_all()
create_pkg_report(pkgname = "wpa", gh = "microsoft/wpa")
?flexdashboard::valueBox
gh("repos/:owner/:repo/issue", owner = "microsoft", repo = "wpa", state = "all", .limit = Inf)
gh("GET /issues", owner = "microsoft", repo = "wpa", state = "all", .limit = Inf)
?gh
gh(
endpoint = "GET /issues",
owner = "microsoft",
repo = "wpa",
state = "all",
.limit = Inf
) %>%
{
dplyr::tibble(
html_url = map_chr(., "html_url"),
title = map_chr(., "title"),
assignee = map_chr(., "assignee")
)
}
gh_issues <-
gh(
endpoint = "GET /issues",
owner = "microsoft",
repo = "wpa",
state = "all",
.limit = 200
)
gh_issues
gh_issues %>%
{
dplyr::tibble(
html_url = map_chr(., "html_url"),
title = map_chr(., "title"),
assignee = map_chr(., "assignee")
)
}
gh_issues %>%
{
dplyr::tibble(
created_at = map_chr(., "created_at") %>% as.Date(),
closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
merged_at = map_chr_hack(., "merged_at") %>% as.Date()
# html_url = map_chr(., "html_url"),
# title = map_chr(., "title"),
# assignee = map_chr(., "assignee")
)
}
map_chr_hack <- function(.x, .f, ...) {
map(.x, .f, ...) %>%
map_if(is.null, ~ NA_character_) %>%
flatten_chr()
}
gh_issues %>%
{
dplyr::tibble(
created_at = map_chr(., "created_at") %>% as.Date(),
closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
merged_at = map_chr_hack(., "merged_at") %>% as.Date()
# html_url = map_chr(., "html_url"),
# title = map_chr(., "title"),
# assignee = map_chr(., "assignee")
)
}
gh_issues %>%
{
dplyr::tibble(
html_url = map_chr(., "html_url"),
created_at = map_chr(., "created_at") %>% as.Date(),
closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
merged_at = map_chr_hack(., "merged_at") %>% as.Date()
# html_url = map_chr(., "html_url"),
# title = map_chr(., "title"),
# assignee = map_chr(., "assignee")
)
}
gh_issues %>%
{
dplyr::tibble(
html_url = map_chr(., "html_url"),
title = map_chr(., "title"),
created_at = map_chr(., "created_at") %>% as.Date(),
closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
merged_at = map_chr_hack(., "merged_at") %>% as.Date()
# assignee = map_chr(., "assignee")
)
}
gh_issues %>%
{
dplyr::tibble(
html_url = map_chr(., "html_url"),
title = map_chr(., "title"),
assignee = map_chr(., "assignee"),
created_at = map_chr(., "created_at") %>% as.Date(),
closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
merged_at = map_chr_hack(., "merged_at") %>% as.Date()
)
}
gh_issues %>%
{
dplyr::tibble(
html_url = map_chr(., "html_url"),
title = map_chr(., "title"),
assignee = map_chr_hack(., "assignee"),
created_at = map_chr(., "created_at") %>% as.Date(),
closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
merged_at = map_chr_hack(., "merged_at") %>% as.Date()
)
}
gh_issues
gh_issues[["assignee"]]
gh_issues[[1]]
gh_issues %>% map_chr(., "assignee")
gh_issues %>% flatten_chr()
gh_issues %>%
{
dplyr::tibble(
html_url = map_chr(., "html_url"),
title = map_chr(., "title"),
created_at = map_chr(., "created_at") %>% as.Date(),
closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
merged_at = map_chr_hack(., "merged_at") %>% as.Date()
)
}
gh_issues
gh_issues %>%
{
dplyr::tibble(
html_url = map_chr(., "html_url"),
title = map_chr(., "title"),
created_at = map_chr(., "created_at") %>% as.Date(),
closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
merged_at = map_chr_hack(., "merged_at") %>% as.Date()
assignee = map_chr(., c("assignee", "login"))
)
}
gh_issues %>%
{
dplyr::tibble(
html_url = map_chr(., "html_url"),
title = map_chr(., "title"),
created_at = map_chr(., "created_at") %>% as.Date(),
closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
merged_at = map_chr_hack(., "merged_at") %>% as.Date(),
assignee = map_chr(., c("assignee", "login"))
)
}
gh_issues
gh_issues %>%
{
dplyr::tibble(
number = map_int(., "number"),
title = map_chr(., "title"),
assignee = map_chr(., c("assignee", "login")),
state = map_chr(., "state"),
created_at = map_chr(., "created_at") %>% as.Date(),
closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
merged_at = map_chr_hack(., "merged_at") %>% as.Date(),
html_url = map_chr(., "html_url")
)
}
gh_issues
gh_issues %>%
writeLines("github issues.txt")
gh_issues %>%
as.character() %>%
writeLines("github issues.txt")
gh_issues %>%
{
dplyr::tibble(
number = map_int(., "number"),
title = map_chr(., "title"),
description = map_chr(., "description"),
assignee = map_chr(., c("assignee", "login")),
state = map_chr(., "state"),
created_at = map_chr(., "created_at") %>% as.Date(),
closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
html_url = map_chr(., "html_url"),
pull_request = map_chr(., "pull_request")
)
}
gh_issues %>%
{
dplyr::tibble(
number = map_int(., "number"),
title = map_chr(., "title"),
description = map_chr(., "description"),
assignee = map_chr(., c("assignee", "login")),
state = map_chr(., "state"),
created_at = map_chr(., "created_at") %>% as.Date(),
closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
html_url = map_chr(., "html_url"),
pull_request = map_chr_hack(., "pull_request")
)
}
gh_issues %>%
{
dplyr::tibble(
number = map_int(., "number"),
title = map_chr(., "title"),
description = map_chr(., "description"),
assignee = map_chr(., c("assignee", "login")),
state = map_chr(., "state"),
created_at = map_chr(., "created_at") %>% as.Date(),
closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
html_url = map_chr(., "html_url"),
pull_request = map_chr_hack(., "pull_request")
)
}
gh_issues %>%
{
dplyr::tibble(
number = map_int(., "number"),
title = map_chr(., "title"),
description = map_chr(., "description"),
assignee = map_chr(., c("assignee", "login")),
state = map_chr(., "state"),
created_at = map_chr(., "created_at") %>% as.Date(),
closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
html_url = map_chr(., "html_url")
)
}
gh_issues %>%
{
dplyr::tibble(
number = map_int(., "number"),
title = map_chr(., "title"),
description = map_chr(., "description"),
assignee = map_chr(., c("assignee", "login")),
state = map_chr(., "state"),
created_at = map_chr(., "created_at") %>% as.Date(),
closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
html_url = map_chr(., "html_url")
)
}
gh_issues %>%
{
dplyr::tibble(
number = map_int(., "number"),
title = map_chr(., "title"),
description = map_chr(., "description"),
assignee = map_chr(., c("assignee", "login")),
state = map_chr(., "state"),
created_at = map_chr(., "created_at") %>% as.Date(),
closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
html_url = map_chr(., "html_url")
)
}
gh_issues
gh_issues %>%
{
dplyr::tibble(
number = map_int(., "number"),
title = map_chr(., "title"),
description = map_chr(., "description"),
assignee = map_chr(., c("assignee", "login")),
state = map_chr(., "state"),
created_at = map_chr(., "created_at") %>% as.Date(),
closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
html_url = map_chr(., "html_url")
)
}
gh_issues %>%
{
dplyr::tibble(
number = map_int(., "number"),
# title = map_chr(., "title"),
# description = map_chr(., "description"),
# assignee = map_chr(., c("assignee", "login")),
# state = map_chr(., "state"),
# created_at = map_chr(., "created_at") %>% as.Date(),
# closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
html_url = map_chr(., "html_url")
)
}
gh_issues %>%
{
dplyr::tibble(
number = map_int(., "number"),
title = map_chr(., "title"),
# description = map_chr(., "description"),
# assignee = map_chr(., c("assignee", "login")),
# state = map_chr(., "state"),
# created_at = map_chr(., "created_at") %>% as.Date(),
# closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
html_url = map_chr(., "html_url")
)
}
gh_issues %>%
{
dplyr::tibble(
number = map_int(., "number"),
title = map_chr(., "title"),
description = map_chr(., "description"),
assignee = map_chr(., c("assignee", "login")),
# state = map_chr(., "state"),
# created_at = map_chr(., "created_at") %>% as.Date(),
# closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
html_url = map_chr(., "html_url")
)
}
gh_issues %>%
{
dplyr::tibble(
number = map_int(., "number"),
title = map_chr(., "title"),
description = map_chr(., "description"),
# assignee = map_chr(., c("assignee", "login")),
# state = map_chr(., "state"),
# created_at = map_chr(., "created_at") %>% as.Date(),
# closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
html_url = map_chr(., "html_url")
)
}
gh_issues %>%
{
dplyr::tibble(
number = map_int(., "number"),
title = map_chr(., "title"),
# description = map_chr(., "description"),
# assignee = map_chr(., c("assignee", "login")),
# state = map_chr(., "state"),
# created_at = map_chr(., "created_at") %>% as.Date(),
# closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
html_url = map_chr(., "html_url")
)
}
gh_issues %>%
{
dplyr::tibble(
number = map_int(., "number"),
title = map_chr(., "title"),
description = map_chr_hack(., "description"),
# assignee = map_chr(., c("assignee", "login")),
# state = map_chr(., "state"),
# created_at = map_chr(., "created_at") %>% as.Date(),
# closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
html_url = map_chr(., "html_url")
)
}
gh_issues %>%
{
dplyr::tibble(
number = map_int(., "number"),
title = map_chr(., "title"),
description = map_chr_hack(., "description"),
# assignee = map_chr(., c("assignee", "login")),
# state = map_chr(., "state"),
# created_at = map_chr(., "created_at") %>% as.Date(),
# closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
html_url = map_chr(., "html_url")
)
} %>%
filter(!is.na(description))
gh_issues %>%
{
dplyr::tibble(
number = map_int(., "number"),
title = map_chr(., "title"),
description = map_chr_hack(., "description"),
assignee = map_chr(., c("assignee", "login")),
state = map_chr(., "state"),
created_at = map_chr(., "created_at") %>% as.Date(),
closed_at = map_chr_hack(., "closed_at") %>% as.Date(),
html_url = map_chr(., "html_url")
)
}
roxygen2::roxygenise()
devtools::load_all()
get_gh_issues(owner = "martinctc", repo = "rwa")
gh(
endpoint = "GET /issues state:open",
owner = owner,
repo = repo,
state = "all",
.limit = Inf
)
gh(
endpoint = "GET /issues state:open",
owner = "martinctc",
repo = "rwa",
state = "all",
.limit = Inf
)
library(httr)
res <- GET("https://api.github.com/repos/microsoft/wpa/issues",
query = list(state = "all", per_page = 100, page = 1))
jsondata <- content(res, type = "text")
library(jsonlite)
github_df <- fromJSON(jsondata, flatten = TRUE)
github_df
github_df <- fromJSON(jsondata, flatten = TRUE) %>% dplyr::as_tibble()
github_df
github_df %>% glimpse()
?httr::GET
devtools::load_all()
get_gh_issues(owner = "martinctc", repo = "rwa")
devtools::load_all()
get_gh_issues(owner = "martinctc", repo = "rwa")
devtools::load_all()
get_gh_issues(owner = "martinctc", repo = "rwa")
devtools::load_all()
get_gh_issues(owner = "martinctc", repo = "rwa")
create_pkg_report("wpa", from = "2021-07-01", to = "2021-07-31", gh = "microsoft/wpa")
roxygen2::roxygenise()
devtools::load_all()
create_pkg_report("wpa", from = "2021-07-01", to = "2021-07-31", gh = "microsoft/wpa")
devtools::load_all()
create_pkg_report("wpa", from = "2021-07-01", to = "2021-07-31", gh = "microsoft/wpa")
devtools::load_all()
create_pkg_report("wpa", from = "2021-07-01", to = "2021-07-31", gh = "microsoft/wpa")
devtools::load_all()
create_pkg_report("wpa", from = "2021-07-01", to = "2021-07-31", gh = "microsoft/wpa")
devtools::load_all()
create_pkg_report("wpa", from = "2021-07-01", to = "2021-07-31", gh = "microsoft/wpa")
get_gh_issues(owner = "microsoft", repo = "wpa")
devtools::load_all()
create_pkg_report("wpa", from = "2021-07-01", to = "2021-07-31", gh = "microsoft/wpa")
get_gh_issues(owner = "microsoft", repo = "wpa") %>% glimpse()
create_pkg_report("wpa", from = "2021-07-01", to = "2021-07-31", gh = "microsoft/wpa")
devtools::load_all()
create_pkg_report("wpa", from = "2021-07-01", to = "2021-07-31", gh = "microsoft/wpa")
devtools::load_all()
create_pkg_report("wpa", from = "2021-07-01", to = "2021-07-31", gh = "microsoft/wpa")
roxygen2::roxygenise()
devtools::load_all()
create_pkg_report("wpa", from = "2021-07-01", to = "2021-07-31", gh = "microsoft/wpa")
create_pkg_report("tidytext", from = "2021-07-01", to = "2021-07-31", gh = "juliasilge/tidytext")
devtools::load_all()
create_pkg_report("tidytext", from = "2021-07-01", to = "2021-07-31", gh = "juliasilge/tidytext")
usethis::use_pkgdown_github_pages()
.Last.error.trace
devtools::check()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
pkgdown::build_site()
